version: "2.1"

networks:
  service-network:
    driver: bridge

services:

  gateway-service:
    image: 'gateway-service'
    build:
      context: gateway-service/.
    container_name: gateway
    networks:
      - service-network
    restart: always
    expose:
      - '8080'
    ports:
      - '8080:8080'
    depends_on:
      - service-audit
      - service-messenger

    # ////////////////////////////

  service-messenger:
    image: 'service-messenger'
    build:
      context: service-messanger/.
    container_name: service-messanger
    networks:
      - service-network
    restart: always
    expose:
      - '8086'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://messenger-db:5430/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
    depends_on:
      - sensor-listener
      - service-messenger-db
      - messenger

  service-messenger-db:
    image: postgres:alpine3.13
    container_name: messenger-db
    networks:
      - service-network
    restart: always
    expose:
      - '5430'
    command: -p 5430
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=1234

  messenger:
    image: 'messenger'
    build:
      context: messanger/.
    container_name: messenger
    networks:
      - service-network
    restart: always
    expose:
      - '8085'
    environment:
      - EMAIL_ADDRESS_TO=shadow.wariorx007@gmail.com
      - EMAIL_ADDRESS_FROM=zlaypanda@mail.ru

  # //////////////////////////////

  service-audit:
    image: 'audit-service'
    build:
      context: audit-service/.
    container_name: audit
    networks:
      - service-network
    restart: always
    expose:
      - '8084'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://audit-db:5431/postgres
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=1234
    depends_on:
      - sensor-listener
      - service-audit-db

  service-audit-db:
    image: postgres:alpine3.13
    restart: always
    container_name: audit-db
    networks:
      - service-network
    expose:
      - '5431'
    command: -p 5431
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=1234

  # ///////////////////////////////

  sensor-listener:
    image: 'sensor-listener:latest'
    build:
      context: sensor-listener/.
    container_name: sensor-listener
    networks:
      - service-network
    restart: always
    expose:
      - '8087'
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://sensor-listener-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=password
    depends_on:
      - kafka
      - zookeeper
      - sensor
      - sensor-listener-db

  sensor-listener-db:
    image: postgres:alpine3.13
    container_name: sensor-listener-db
    networks:
      - service-network
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password

    # ////////////////////////////////

  sensor:
    image: 'sensor:latest'
    build:
      context: sensor/.
    container_name: sensor
    networks:
      - service-network
    expose:
      - '8088'
    restart: always

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    networks:
      - service-network
    expose:
      - '2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    networks:
      - service-network
    restart: on-failure
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://:9092
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    volumes:
      - ./:/etc/kafka